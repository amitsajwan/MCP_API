openapi: 3.0.3
info:
  title: Mailbox API
  description: API for managing messages, notifications, and alerts
  version: 1.0.0
  contact:
    name: Mailbox Team
    email: mailbox@company.com
servers:
  - url: https://api.company.com/mailbox/v1
    description: Production server
paths:
  /messages:
    get:
      operationId: getMessages
      summary: Get messages
      description: Retrieve messages with optional filtering
      tags:
        - messages
      parameters:
        - name: user_id
          in: query
          description: User ID to filter by
          schema:
            type: string
        - name: status
          in: query
          description: Filter by message status
          schema:
            type: string
            enum: [unread, read, archived, deleted]
        - name: type
          in: query
          description: Filter by message type
          schema:
            type: string
            enum: [notification, alert, approval, system, user]
        - name: priority
          in: query
          description: Filter by priority
          schema:
            type: string
            enum: [low, medium, high, urgent]
        - name: date_from
          in: query
          description: Start date for filtering (YYYY-MM-DD)
          schema:
            type: string
        - name: date_to
          in: query
          description: End date for filtering (YYYY-MM-DD)
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of messages to return
          schema:
            type: integer
            default: 50
      responses:
        '200':
          description: List of messages
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
                  total_count:
                    type: integer
                  unread_count:
                    type: integer
    
    post:
      operationId: createMessage
      summary: Create message
      description: Create a new message
      tags:
        - messages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageRequest'
      responses:
        '201':
          description: Message created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  
  /messages/{message_id}:
    get:
      operationId: getMessageById
      summary: Get message by ID
      description: Retrieve a specific message by its ID
      tags:
        - messages
      parameters:
        - name: message_id
          in: path
          required: true
          description: Message ID
          schema:
            type: string
      responses:
        '200':
          description: Message details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    
    put:
      operationId: updateMessage
      summary: Update message
      description: Update an existing message
      tags:
        - messages
      parameters:
        - name: message_id
          in: path
          required: true
          description: Message ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageUpdate'
      responses:
        '200':
          description: Message updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    
    delete:
      operationId: deleteMessage
      summary: Delete message
      description: Delete a message
      tags:
        - messages
      parameters:
        - name: message_id
          in: path
          required: true
          description: Message ID
          schema:
            type: string
      responses:
        '200':
          description: Message deleted successfully
  
  /messages/{message_id}/read:
    post:
      operationId: markMessageAsRead
      summary: Mark message as read
      description: Mark a message as read
      tags:
        - messages
      parameters:
        - name: message_id
          in: path
          required: true
          description: Message ID
          schema:
            type: string
      responses:
        '200':
          description: Message marked as read successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  
  /messages/{message_id}/archive:
    post:
      operationId: archiveMessage
      summary: Archive message
      description: Archive a message
      tags:
        - messages
      parameters:
        - name: message_id
          in: path
          required: true
          description: Message ID
          schema:
            type: string
      responses:
        '200':
          description: Message archived successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  
  /notifications:
    get:
      operationId: getNotifications
      summary: Get notifications
      description: Retrieve notifications with optional filtering
      tags:
        - notifications
      parameters:
        - name: user_id
          in: query
          description: User ID to filter by
          schema:
            type: string
        - name: status
          in: query
          description: Filter by notification status
          schema:
            type: string
            enum: [unread, read, dismissed]
        - name: type
          in: query
          description: Filter by notification type
          schema:
            type: string
            enum: [payment, trade, settlement, system, alert]
        - name: priority
          in: query
          description: Filter by priority
          schema:
            type: string
            enum: [low, medium, high, urgent]
        - name: date_from
          in: query
          description: Start date for filtering (YYYY-MM-DD)
          schema:
            type: string
        - name: date_to
          in: query
          description: End date for filtering (YYYY-MM-DD)
          schema:
            type: string
      responses:
        '200':
          description: List of notifications
          content:
            application/json:
              schema:
                type: object
                properties:
                  notifications:
                    type: array
                    items:
                      $ref: '#/components/schemas/Notification'
                  total_count:
                    type: integer
                  unread_count:
                    type: integer
    
    post:
      operationId: createNotification
      summary: Create notification
      description: Create a new notification
      tags:
        - notifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
      responses:
        '201':
          description: Notification created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
  
  /notifications/{notification_id}:
    get:
      operationId: getNotificationById
      summary: Get notification by ID
      description: Retrieve a specific notification by its ID
      tags:
        - notifications
      parameters:
        - name: notification_id
          in: path
          required: true
          description: Notification ID
          schema:
            type: string
      responses:
        '200':
          description: Notification details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
    
    delete:
      operationId: deleteNotification
      summary: Delete notification
      description: Delete a notification
      tags:
        - notifications
      parameters:
        - name: notification_id
          in: path
          required: true
          description: Notification ID
          schema:
            type: string
      responses:
        '200':
          description: Notification deleted successfully
  
  /notifications/{notification_id}/dismiss:
    post:
      operationId: dismissNotification
      summary: Dismiss notification
      description: Dismiss a notification
      tags:
        - notifications
      parameters:
        - name: notification_id
          in: path
          required: true
          description: Notification ID
          schema:
            type: string
      responses:
        '200':
          description: Notification dismissed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
  
  /alerts:
    get:
      operationId: getAlerts
      summary: Get alerts
      description: Retrieve alerts with optional filtering
      tags:
        - alerts
      parameters:
        - name: user_id
          in: query
          description: User ID to filter by
          schema:
            type: string
        - name: status
          in: query
          description: Filter by alert status
          schema:
            type: string
            enum: [active, acknowledged, resolved]
        - name: severity
          in: query
          description: Filter by severity
          schema:
            type: string
            enum: [info, warning, error, critical]
        - name: category
          in: query
          description: Filter by category
          schema:
            type: string
            enum: [payment, trade, settlement, system, security]
        - name: date_from
          in: query
          description: Start date for filtering (YYYY-MM-DD)
          schema:
            type: string
        - name: date_to
          in: query
          description: End date for filtering (YYYY-MM-DD)
          schema:
            type: string
      responses:
        '200':
          description: List of alerts
          content:
            application/json:
              schema:
                type: object
                properties:
                  alerts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Alert'
                  total_count:
                    type: integer
                  active_count:
                    type: integer
    
    post:
      operationId: createAlert
      summary: Create alert
      description: Create a new alert
      tags:
        - alerts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertRequest'
      responses:
        '201':
          description: Alert created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
  
  /alerts/{alert_id}:
    get:
      operationId: getAlertById
      summary: Get alert by ID
      description: Retrieve a specific alert by its ID
      tags:
        - alerts
      parameters:
        - name: alert_id
          in: path
          required: true
          description: Alert ID
          schema:
            type: string
      responses:
        '200':
          description: Alert details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
    
    put:
      operationId: updateAlert
      summary: Update alert
      description: Update an existing alert
      tags:
        - alerts
      parameters:
        - name: alert_id
          in: path
          required: true
          description: Alert ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertUpdate'
      responses:
        '200':
          description: Alert updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
  
  /alerts/{alert_id}/acknowledge:
    post:
      operationId: acknowledgeAlert
      summary: Acknowledge alert
      description: Acknowledge an alert
      tags:
        - alerts
      parameters:
        - name: alert_id
          in: path
          required: true
          description: Alert ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                acknowledged_by:
                  type: string
                  description: ID of the person acknowledging the alert
                comments:
                  type: string
                  description: Acknowledgment comments
      responses:
        '200':
          description: Alert acknowledged successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
  
  /alerts/{alert_id}/resolve:
    post:
      operationId: resolveAlert
      summary: Resolve alert
      description: Resolve an alert
      tags:
        - alerts
      parameters:
        - name: alert_id
          in: path
          required: true
          description: Alert ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resolved_by:
                  type: string
                  description: ID of the person resolving the alert
                resolution_notes:
                  type: string
                  description: Resolution notes
      responses:
        '200':
          description: Alert resolved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
  
  /summary:
    get:
      operationId: getMailboxSummary
      summary: Get mailbox summary
      description: Get summary of mailbox activities including unread messages and active alerts
      tags:
        - summary
      parameters:
        - name: user_id
          in: query
          description: User ID to filter by
          schema:
            type: string
        - name: date_range
          in: query
          description: Date range for summary
          schema:
            type: string
            enum: [today, yesterday, last_7_days, this_month, last_month]
        - name: include_details
          in: query
          description: Include detailed breakdown
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Mailbox summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MailboxSummary'

components:
  schemas:
    Message:
      type: object
      properties:
        id:
          type: string
          description: Message ID
        user_id:
          type: string
          description: User ID
        sender_id:
          type: string
          description: Sender ID
        subject:
          type: string
          description: Message subject
        content:
          type: string
          description: Message content
        type:
          type: string
          enum: [notification, alert, approval, system, user]
          description: Message type
        priority:
          type: string
          enum: [low, medium, high, urgent]
          description: Message priority
        status:
          type: string
          enum: [unread, read, archived, deleted]
          description: Message status
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp
        read_at:
          type: string
          format: date-time
          description: Read timestamp
        metadata:
          type: object
          description: Additional metadata
      required:
        - id
        - user_id
        - subject
        - content
        - type
        - status
    
    MessageRequest:
      type: object
      properties:
        user_id:
          type: string
          description: User ID
        sender_id:
          type: string
          description: Sender ID
        subject:
          type: string
          description: Message subject
        content:
          type: string
          description: Message content
        type:
          type: string
          enum: [notification, alert, approval, system, user]
          description: Message type
        priority:
          type: string
          enum: [low, medium, high, urgent]
          description: Message priority
        metadata:
          type: object
          description: Additional metadata
      required:
        - user_id
        - subject
        - content
        - type
    
    MessageUpdate:
      type: object
      properties:
        subject:
          type: string
          description: Message subject
        content:
          type: string
          description: Message content
        priority:
          type: string
          enum: [low, medium, high, urgent]
          description: Message priority
        metadata:
          type: object
          description: Additional metadata
    
    Notification:
      type: object
      properties:
        id:
          type: string
          description: Notification ID
        user_id:
          type: string
          description: User ID
        title:
          type: string
          description: Notification title
        message:
          type: string
          description: Notification message
        type:
          type: string
          enum: [payment, trade, settlement, system, alert]
          description: Notification type
        priority:
          type: string
          enum: [low, medium, high, urgent]
          description: Notification priority
        status:
          type: string
          enum: [unread, read, dismissed]
          description: Notification status
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp
        read_at:
          type: string
          format: date-time
          description: Read timestamp
        dismissed_at:
          type: string
          format: date-time
          description: Dismissed timestamp
        action_url:
          type: string
          description: Action URL
        metadata:
          type: object
          description: Additional metadata
      required:
        - id
        - user_id
        - title
        - message
        - type
        - status
    
    NotificationRequest:
      type: object
      properties:
        user_id:
          type: string
          description: User ID
        title:
          type: string
          description: Notification title
        message:
          type: string
          description: Notification message
        type:
          type: string
          enum: [payment, trade, settlement, system, alert]
          description: Notification type
        priority:
          type: string
          enum: [low, medium, high, urgent]
          description: Notification priority
        action_url:
          type: string
          description: Action URL
        metadata:
          type: object
          description: Additional metadata
      required:
        - user_id
        - title
        - message
        - type
    
    Alert:
      type: object
      properties:
        id:
          type: string
          description: Alert ID
        user_id:
          type: string
          description: User ID
        title:
          type: string
          description: Alert title
        description:
          type: string
          description: Alert description
        category:
          type: string
          enum: [payment, trade, settlement, system, security]
          description: Alert category
        severity:
          type: string
          enum: [info, warning, error, critical]
          description: Alert severity
        status:
          type: string
          enum: [active, acknowledged, resolved]
          description: Alert status
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp
        acknowledged_at:
          type: string
          format: date-time
          description: Acknowledged timestamp
        resolved_at:
          type: string
          format: date-time
          description: Resolved timestamp
        acknowledged_by:
          type: string
          description: ID of person who acknowledged
        resolved_by:
          type: string
          description: ID of person who resolved
        resolution_notes:
          type: string
          description: Resolution notes
        metadata:
          type: object
          description: Additional metadata
      required:
        - id
        - user_id
        - title
        - description
        - category
        - severity
        - status
    
    AlertRequest:
      type: object
      properties:
        user_id:
          type: string
          description: User ID
        title:
          type: string
          description: Alert title
        description:
          type: string
          description: Alert description
        category:
          type: string
          enum: [payment, trade, settlement, system, security]
          description: Alert category
        severity:
          type: string
          enum: [info, warning, error, critical]
          description: Alert severity
        metadata:
          type: object
          description: Additional metadata
      required:
        - user_id
        - title
        - description
        - category
        - severity
    
    AlertUpdate:
      type: object
      properties:
        title:
          type: string
          description: Alert title
        description:
          type: string
          description: Alert description
        category:
          type: string
          enum: [payment, trade, settlement, system, security]
          description: Alert category
        severity:
          type: string
          enum: [info, warning, error, critical]
          description: Alert severity
        metadata:
          type: object
          description: Additional metadata
    
    MailboxSummary:
      type: object
      properties:
        user_id:
          type: string
          description: User ID
        total_messages:
          type: integer
          description: Total number of messages
        unread_messages:
          type: integer
          description: Number of unread messages
        total_notifications:
          type: integer
          description: Total number of notifications
        unread_notifications:
          type: integer
          description: Number of unread notifications
        total_alerts:
          type: integer
          description: Total number of alerts
        active_alerts:
          type: integer
          description: Number of active alerts
        urgent_items:
          type: integer
          description: Number of urgent items
        message_summary:
          type: object
          properties:
            by_type:
              type: object
            by_priority:
              type: object
        notification_summary:
          type: object
          properties:
            by_type:
              type: object
            by_priority:
              type: object
        alert_summary:
          type: object
          properties:
            by_category:
              type: object
            by_severity:
              type: object
        recent_activity:
          type: array
          items:
            type: object
          description: Recent activity items
      required:
        - user_id
        - total_messages
        - unread_messages
        - total_notifications
        - unread_notifications
        - total_alerts
        - active_alerts
